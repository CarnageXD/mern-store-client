{"version":3,"sources":["hooks/redux-hooks.ts","redux/features/authSlice.ts","components/Drawer/Drawer.tsx","redux/features/snackbarSlice.ts","components/Header/Header.tsx","components/Footer/Footer.tsx","layouts/MainLayout.tsx","components/Snackbar.tsx","config.ts","redux/features/api/mainApi.ts","redux/features/cartSlice.ts","components/Card/OrdersSummaryCard.tsx","components/Orders/OrderItem.tsx","components/Orders/Order.tsx","components/Orders/Orders.tsx","utils/getTotalOrders.ts","pages/ProfilePage.tsx","components/Products/ProductItem.tsx","components/Search/Search.tsx","components/Select/Select.tsx","components/Select/SortSelect.tsx","components/Select/FilterSelect.tsx","components/Drawer/Filter.tsx","components/Products/Products.tsx","components/PromotionSlider.tsx","pages/ProductsPage.tsx","components/Products/DetailedProduct.tsx","pages/DetailedProductPage.tsx","components/Cart/CartItem.tsx","utils/getTotal.ts","components/Card/CartSummaryCard.tsx","components/Cart/Cart.tsx","assets/img/cart/emptyCart.png","components/Cart/EmptyCart.tsx","pages/CartPage.tsx","components/Auth/SignUp.tsx","components/Auth/SignIn.tsx","pages/AuthPage.tsx","components/Admin/AddProductForm.tsx","pages/AdminPage.tsx","utils/InitializeApp.tsx","routes/routes.tsx","App.tsx","theme/theme.ts","redux/store.ts","index.tsx"],"names":["useAppDispatch","useDispatch","useAppSelector","useSelector","authSlice","createSlice","name","initialState","id","token","role","reducers","setCredentials","state","action","payload","actions","TemporaryDrawer","isOpen","toggleDrawer","cartLength","cart","products","length","isAuth","auth","isAdmin","dispatch","Drawer","open","anchor","onClose","Box","sx","width","Typography","align","onClick","color","p","cursor","Divider","List","paddingLeft","to","ListItem","button","style","padding","ListItemIcon","AdminPanelSettingsOutlined","ListItemText","disableTypography","fontSize","AccountCircleOutlined","Badge","badgeContent","ShoppingCartOutlined","localStorage","removeItem","ExitToAppOutlined","LoginOutlined","snackbarSlice","snackbarOpen","snackbarType","snackbarMessage","setSnackbar","setSuccessSnackbar","setErrorSnackbar","setInfoSnackbar","Header","useState","isDrawerOpen","setIsDrawerOpen","prev","flexGrow","mb","AppBar","position","elevation","Toolbar","background","variant","component","fontWeight","IconButton","display","xs","md","Footer","backgroundColor","Container","flexDirection","alignItems","gutterBottom","rel","href","target","Instagram","Telegram","Facebook","YouTube","Twitter","MainLayout","children","minHeight","CssBaseline","flex","maxWidth","CustomizedSnackbar","snackbar","handleClose","event","reason","Snackbar","autoHideDuration","message","Alert","API_URL","mainApi","createApi","reducerPath","tagTypes","baseQuery","fetchBaseQuery","baseUrl","prepareHeaders","headers","getState","set","endpoints","build","userRegister","mutation","query","body","url","method","userLogin","getCart","providesTags","result","map","type","_id","addCartProduct","product","size","invalidatesTags","deleteCartProduct","adjustProductCartQuantity","quantity","cartQuantity","getProducts","queryParams","limit","page","order","filters","min","max","category","items","getProduct","addProduct","getOrders","addOrder","cartId","useUserRegisterMutation","useUserLoginMutation","useGetProductsQuery","useGetProductQuery","useGetCartQuery","useAddCartProductMutation","useDeleteCartProductMutation","useGetOrdersQuery","useAddOrderMutation","useAddProductMutation","useAdjustProductCartQuantityMutation","setCart","OrdersSummaryCard","avg","price","mt","Card","bgcolor","CardContent","justifyContent","toFixed","isNaN","OrderItem","total","src","image","height","alt","primary","title","secondary","Order","orderTime","paymentStatus","setOpen","cutStr","str","substr","Assignment","mr","sm","ml","pr","ExpandLess","ExpandMore","Collapse","in","timeout","unmountOnExit","disablePadding","Orders","userId","data","isLoading","orders","slice","reverse","console","log","summaryCardData","totalPrice","flat","reduce","cur","totalOrdersQuantity","getTotalOrders","CircularProgress","ProfilePage","userName","ProductItem","history","useHistory","Grid","item","marginBottom","push","CardActionArea","CardMedia","Search","value","setValue","TextField","placeholder","onChange","e","InputProps","endAdornment","Close","CustomSelect","label","m","FormControl","fullWidth","InputLabel","Select","labelId","SortSelect","MenuItem","Filter","setFilters","setPage","setIsOpen","setMin","setMax","setCategory","Button","marginLeft","FilterAlt","onSubmit","preventDefault","FilterSelect","marginTop","Products","searchValue","setSearchValue","sortValue","setSortValue","container","spacing","filter","toLowerCase","includes","pl","Pagination","count","Math","ceil","totalItems","showFirstButton","showLastButton","PromotionSlider","backgroundImage","backgroundSize","backgroundPosition","ProductsPage","DetailedProduct","cartProducts","setSize","disableButtonCondition","findIndex","sex","description","alignSelf","select","sizes","split","unwrap","then","catch","disabled","DetailedProductPage","useParams","CartItem","setCartQuantity","adjustProductCart","flexWrap","pt","Add","Remove","Delete","getTotal","array","property","CartSummaryCard","totalQuantity","handleAddProduct","Cart","summaryPrice","summaryQuantity","handleAddingOrder","a","window","location","EmptyCart","cartImg","margin","textAlign","ArrowBackIos","CartPage","SignUp","toggle","useForm","register","handleSubmit","errors","formState","registerUser","Avatar","handleRegister","required","maxLength","autoFocus","pattern","email","minLength","password","Link","SignIn","loginUser","handleLogin","setItem","JSON","stringify","AuthPage","isRegistered","setIsRegistered","toggleRegistered","AddProductForm","setProduct","handleChange","files","createFormData","formData","FormData","append","autoComplete","multiline","rows","accept","AdminPage","InitializeApp","lsValue","setLSValue","addEventListener","getItem","useEffect","authData","parse","routes","isAuthenticated","path","exact","useRoutes","App","theme","createTheme","palette","main","light","shape","borderRadius","store","configureStore","reducer","authReducer","cartReducer","snackbarReducer","middleware","getDefaultMiddleware","concat","ReactDOM","render","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.60b2afb2.chunk.js","sourcesContent":["import {TypedUseSelectorHook, useDispatch, useSelector} from 'react-redux'\nimport type {RootState, AppDispatch} from './../redux/store'\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector","import {createSlice, PayloadAction} from '@reduxjs/toolkit'\nimport {AuthState} from \"../../types/Auth/auth\";\n\nconst initialState: AuthState = {\n    id: null,\n    name: null,\n    token: null,\n    role: null,\n}\n\nexport const authSlice = createSlice({\n    name: 'auth',\n    initialState,\n    reducers: {\n        setCredentials: (state, action: PayloadAction<AuthState>) => {\n            state.id = action.payload.id\n            state.name = action.payload.name\n            state.token = action.payload.token\n            state.role = action.payload.role\n        }\n    }\n})\n\nexport const {setCredentials} = authSlice.actions\n\nexport default authSlice.reducer\n","import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Drawer from '@mui/material/Drawer';\nimport List from '@mui/material/List';\nimport Divider from '@mui/material/Divider';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport {AccountCircleOutlined, AdminPanelSettingsOutlined, ExitToAppOutlined, LoginOutlined, ShoppingCartOutlined} from \"@mui/icons-material\";\nimport {Badge, Typography} from \"@mui/material\";\nimport {NavLink} from 'react-router-dom';\nimport {useAppDispatch, useAppSelector} from \"../../hooks/redux-hooks\";\nimport {setCredentials} from \"../../redux/features/authSlice\";\n\ntype TemporaryDrawerType = {\n    isOpen: boolean\n    toggleDrawer: () => void\n}\n\nconst TemporaryDrawer: React.FC<TemporaryDrawerType> = ({isOpen, toggleDrawer}) => {\n    const cartLength = useAppSelector(state => state.cart.products?.length)\n    const isAuth = !!(useAppSelector(state => state.auth.token));\n    const isAdmin = useAppSelector(state => state.auth.role)\n\n    const dispatch = useAppDispatch()\n    const handleLogout = () => {\n        localStorage.removeItem('authData')\n        dispatch(setCredentials({\n            name: null,\n            id: null,\n            token: null,\n            role: null\n        }))\n    }\n    return (\n        <Drawer\n            open={isOpen}\n            anchor={\"right\"}\n            onClose={toggleDrawer}\n        >\n            <Box sx={{width: 320}}\n            >\n                <Typography\n                    align={\"center\"}\n                    onClick={toggleDrawer}\n                    color=\"inherit\"\n                    p={2}\n                    sx={{cursor: 'pointer'}}\n                >\n                    Back\n                </Typography>\n                <Divider/>\n                <List sx={{paddingLeft: 2}}>\n                    {isAuth ?\n                        <>\n                            {isAdmin === \"ADMIN\" ?\n                                <NavLink to=\"/admin\" onClick={toggleDrawer}>\n                                    <ListItem button style={{padding: '1rem .2rem'}}>\n                                        <ListItemIcon>\n                                            <AdminPanelSettingsOutlined/>\n                                        </ListItemIcon>\n                                        <ListItemText disableTypography sx={{fontSize: '1.3rem'}}>\n                                            Admin\n                                        </ListItemText>\n                                    </ListItem>\n                                </NavLink>\n                                :\n                                null\n                            }\n                            <NavLink to=\"/profile\" onClick={toggleDrawer}>\n                                <ListItem button style={{padding: '1rem .2rem'}}>\n                                    <ListItemIcon>\n                                        <AccountCircleOutlined/>\n                                    </ListItemIcon>\n                                    <ListItemText disableTypography sx={{fontSize: '1.3rem'}}>\n                                        Account\n                                    </ListItemText>\n                                </ListItem>\n                            </NavLink>\n                            <NavLink to=\"/cart\" onClick={toggleDrawer}>\n                                <ListItem button style={{padding: '1rem .2rem'}}>\n                                    <ListItemIcon>\n                                        <Badge badgeContent={cartLength} color=\"primary\">\n\n                                        <ShoppingCartOutlined/>\n                                        </Badge>\n                                    </ListItemIcon>\n                                    <ListItemText disableTypography sx={{fontSize: '1.3rem'}}>\n                                        Cart\n                                    </ListItemText>\n                                </ListItem>\n                            </NavLink>\n                            <NavLink to=\"/\" onClick={toggleDrawer}>\n                                <ListItem onClick={handleLogout} button style={{padding: '1rem .2rem'}}>\n                                    <ListItemIcon>\n                                        <ExitToAppOutlined/>\n                                    </ListItemIcon>\n                                    <ListItemText disableTypography sx={{fontSize: '1.3rem'}}>\n                                        Logout\n                                    </ListItemText>\n                                </ListItem>\n                            </NavLink>\n                        </>\n                        :\n                        <>\n                            <NavLink to=\"/auth\" onClick={toggleDrawer}>\n                                <ListItem button style={{padding: '1rem .2rem'}}>\n                                    <ListItemIcon>\n                                        <LoginOutlined/>\n                                    </ListItemIcon>\n                                    <ListItemText disableTypography sx={{fontSize: '1.3rem'}}>\n                                        Login\n                                    </ListItemText>\n                                </ListItem>\n                            </NavLink>\n                        </>\n                    }\n                </List>\n            </Box>\n        </Drawer>\n    )\n}\n\nexport default TemporaryDrawer\n","import {createSlice, PayloadAction} from '@reduxjs/toolkit'\nimport {SnackbarState} from '../../types/Snackbar/snackbar'\n\nconst initialState:SnackbarState = {\n  snackbarOpen: false,\n  snackbarType: \"success\",\n  snackbarMessage: \"\",\n}\n\nexport const snackbarSlice = createSlice({\n  name: \"snackbar\",\n  initialState,\n  reducers: {\n    setSnackbar: (state, action: PayloadAction<SnackbarState>) => {\n      state.snackbarOpen = action.payload.snackbarOpen\n      state.snackbarType = action.payload.snackbarType\n      state.snackbarMessage = action.payload.snackbarMessage\n    },\n    setSuccessSnackbar: (state, action: PayloadAction<string>) => {\n      state.snackbarOpen = true\n      state.snackbarType = \"success\"\n      state.snackbarMessage = action.payload\n    },\n    setErrorSnackbar: (state, action: PayloadAction<string>) => {\n      state.snackbarOpen = true\n      state.snackbarType = \"error\"\n      state.snackbarMessage = action.payload\n    },\n    setInfoSnackbar: (state, action: PayloadAction<string>) => {\n      state.snackbarOpen = true\n      state.snackbarType = \"info\"\n      state.snackbarMessage = action.payload\n    }\n  }\n})\n\nexport const {setSnackbar, setSuccessSnackbar, setErrorSnackbar, setInfoSnackbar} = snackbarSlice.actions\n\nexport default snackbarSlice.reducer","import * as React from \"react\";\nimport {useState} from \"react\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport IconButton from \"@mui/material/IconButton\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport {\n    AccountCircleOutlined,\n    AdminPanelSettingsOutlined,\n    ExitToAppOutlined,\n    ShoppingCartOutlined,\n} from \"@mui/icons-material\";\nimport {Badge, Divider} from \"@mui/material\";\nimport Drawer from \"../Drawer/Drawer\";\nimport {NavLink} from \"react-router-dom\";\nimport {useAppDispatch, useAppSelector} from \"../../hooks/redux-hooks\";\nimport {setCredentials} from \"../../redux/features/authSlice\";\nimport {setSuccessSnackbar} from \"../../redux/features/snackbarSlice\";\n\nexport default function Header() {\n    const isAuth = !!useAppSelector((state) => state.auth.token);\n    const dispatch = useAppDispatch();\n    const [isDrawerOpen, setIsDrawerOpen] = useState(false);\n    const cartLength = useAppSelector(state => state.cart.products?.length)\n    const isAdmin = useAppSelector(state => state.auth.role)\n    const toggleDrawer = () => setIsDrawerOpen((prev) => !prev);\n\n    const handleLogout = () => {\n        localStorage.removeItem(\"authData\");\n        dispatch(\n            setCredentials({\n                name: null,\n                id: null,\n                token: null,\n                role: null,\n            })\n        );\n        dispatch(setSuccessSnackbar(\"Success logout\"))\n    };\n\n    return (\n        <Box sx={{flexGrow: 1, mb: 2}}>\n            <AppBar position=\"static\" elevation={0}>\n                <Toolbar sx={{background: \"white\", color: \"black\"}}>\n                    <Typography\n                        variant=\"h6\"\n                        component=\"div\"\n                        sx={{flexGrow: 1, fontWeight: \"bolder\"}}\n                    >\n                        <NavLink to=\"/\">MERN</NavLink>\n                    </Typography>\n                    {isAuth ? (\n                        <>\n                            {isAdmin === 'ADMIN' ?\n                                <NavLink to=\"/admin\">\n                                    <IconButton sx={{\n                                        display: {\n                                            xs: \"none !important\",\n                                            md: \"flex !important\",\n                                        },\n                                    }} color=\"inherit\">\n                                        <AdminPanelSettingsOutlined/>\n                                    </IconButton>\n                                </NavLink>\n                                :\n                                null\n                            }\n\n                            <NavLink to=\"/profile\">\n                                <IconButton sx={{\n                                    display: {\n                                        xs: \"none !important\",\n                                        md: \"flex !important\",\n                                    },\n                                }} color=\"inherit\">\n                                    <AccountCircleOutlined/>\n                                </IconButton>\n                            </NavLink>\n                            <NavLink to=\"/cart\">\n                                <IconButton sx={{\n                                    display: {\n                                        xs: \"none !important\",\n                                        md: \"flex !important\",\n                                    },\n                                }} color=\"inherit\">\n                                    <Badge badgeContent={cartLength} color=\"primary\">\n                                        <ShoppingCartOutlined/>\n                                    </Badge>\n                                </IconButton>\n                            </NavLink>\n                            <NavLink to=\"/\">\n                                <IconButton\n                                    sx={{\n                                        display: {\n                                            xs: \"none !important\",\n                                            md: \"flex !important\",\n                                        },\n                                    }}\n                                    onClick={handleLogout}\n                                    color=\"inherit\"\n                                >\n                                    <ExitToAppOutlined/>\n                                </IconButton>\n                            </NavLink>\n                        </>\n                    ) : (\n                        <NavLink to=\"/auth\">\n                            <Typography\n                                sx={{display: {xs: \"none\", md: \"block\"}}}\n                                variant={\"h5\"}\n                            >\n                                Login\n                            </Typography>\n                        </NavLink>\n                    )}\n                    <IconButton\n                        onClick={toggleDrawer}\n                        color=\"inherit\"\n                        sx={{display: {md: \"none !important\"}}}\n                    >\n                        <MenuIcon/>\n                    </IconButton>\n                </Toolbar>\n                <Divider color={\"#d4d4d4\"}/>\n            </AppBar>\n            <Drawer isOpen={isDrawerOpen} toggleDrawer={toggleDrawer}/>\n        </Box>\n    );\n}\n","import React from 'react';\nimport {Box, Container, Typography} from \"@mui/material\";\nimport {Facebook, Instagram, Telegram, Twitter, YouTube} from \"@mui/icons-material\";\n\nconst Footer = () => {\n    return (\n        <Box sx={{backgroundColor: \"#efefef\"}}>\n            <Container>\n                <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\" width=\"100%\" p={2}>\n                    <Box sx={{mb: 1}} color={\"#777\"}>\n                        <Typography\n                            align=\"center\"\n                            gutterBottom\n                            variant=\"button\"\n                            component=\"div\"\n                            color={\"black\"}\n                        >\n                            Follow us</Typography>\n                        <a rel=\"noreferrer\" href=\"https://instagram.com\" target=\"_blank\"> <Instagram/> </a>\n                        <a rel=\"noreferrer\" href=\"https://telegram.org\" target=\"_blank\"> <Telegram/> </a>\n                        <a rel=\"noreferrer\" href=\"https://facebook.com\" target=\"_blank\"> <Facebook/> </a>\n                        <a rel=\"noreferrer\" href=\"https://youtube.com\" target=\"_blank\"> <YouTube/> </a>\n                        <a rel=\"noreferrer\" href=\"https://twitter.com\" target=\"_blank\"> <Twitter/> </a>\n                    </Box>\n                    <Typography variant=\"caption\">©2021, C Inc. All Rights Reserved</Typography>\n                </Box>\n            </Container>\n        </Box>\n    );\n};\n\nexport default Footer;","import React, {ReactNode} from \"react\";\nimport {Box, Container, CssBaseline} from \"@mui/material\";\nimport Header from \"../components/Header/Header\";\nimport Footer from \"../components/Footer/Footer\";\n\ntype MainLayoutType = {\n    children?: ReactNode;\n};\n\nconst MainLayout: React.FC<MainLayoutType> = ({children}) => {\n    return (\n        <Box display={\"flex\"} flexDirection={\"column\"} minHeight={\"100vh\"}>\n            <CssBaseline/>\n            <Header/>\n            <Container sx={{flex: 1, display: \"flex\", flexDirection: \"column\", alignItems: \"center\"}}\n                       maxWidth={\"lg\"}>\n                {children}\n            </Container>\n            <Footer/>\n        </Box>\n    );\n};\n\nexport default MainLayout;\n","import * as React from \"react\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport { useAppDispatch, useAppSelector } from \"../hooks/redux-hooks\";\nimport { setSnackbar } from \"../redux/features/snackbarSlice\";\nimport { Alert } from \"@mui/material\";\n\nexport default function CustomizedSnackbar() {\n  const dispatch = useAppDispatch();\n  const snackbarOpen = useAppSelector((state) => state.snackbar.snackbarOpen);\n  const snackbarType = useAppSelector((state) => state.snackbar.snackbarType);\n  const snackbarMessage = useAppSelector(\n    (state) => state.snackbar.snackbarMessage\n  );\n\n  const handleClose = (\n    event: React.SyntheticEvent | React.MouseEvent,\n    reason?: string\n  ) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    dispatch(\n      setSnackbar({\n        snackbarOpen: false,\n        snackbarType,\n        snackbarMessage,\n      })\n    );\n  };\n\n  return (\n    <div>\n      <Snackbar\n        open={snackbarOpen}\n        autoHideDuration={3000}\n        onClose={handleClose}\n        message=\"\"\n      >\n        <Alert\n          elevation={3}\n          variant=\"filled\"\n          onClose={handleClose}\n          color={snackbarType}\n        >\n          {snackbarMessage}\n        </Alert>\n      </Snackbar>\n    </div>\n  );\n}\n","export const API_URL = `https://shrouded-taiga-38228.herokuapp.com/`\n","import {createApi, fetchBaseQuery} from \"@reduxjs/toolkit/query/react\"\nimport {AuthState, LoginData, RegisterData} from \"../../../types/Auth/auth\";\nimport {IProduct, IProductsResponse, IQueryGetProduct} from \"../../../types/Products/products\";\nimport {ICartResponse} from \"../../../types/Cart/cart\";\nimport {IOrders} from \"../../../types/Orders/orders\";\nimport {RootState} from \"../../store\";\nimport {API_URL} from \"../../../config\";\n\nexport const mainApi = createApi({\n    reducerPath: 'mainApi',\n    tagTypes: ['Cart', 'Orders', 'Products'],\n    baseQuery: fetchBaseQuery({\n        baseUrl: `${API_URL}api/` || 'http://localhost:5001/api',\n        prepareHeaders(headers, {getState}) {\n            const token = (getState() as RootState).auth.token\n            headers.set('Authorization', `Bearer ${token}`)\n            return headers\n        }\n    }),\n    endpoints: (build) => ({\n        //AUTH\n        userRegister: build.mutation<void, RegisterData>({\n            query: (body) => ({\n                url: 'auth/register',\n                method: \"POST\",\n                body\n            })\n        }),\n        userLogin: build.mutation<AuthState, LoginData>({\n            query: (body) => ({\n                url: 'auth/login',\n                method: 'POST',\n                body\n            })\n        }),\n        //CART\n        getCart: build.query<ICartResponse, string | null>({\n            query: () => `cart`,\n            providesTags: (result) =>\n                result\n                    ? [\n                        ...result.products.map(({_id}) => ({type: 'Cart' as const, _id})),\n                        {type: 'Cart', id: 'LIST'},\n                    ]\n                    : [{type: 'Cart', id: 'LIST'}],\n        }),\n        addCartProduct: build.mutation({\n            query: (payload) => ({\n                url: `cart/add/`,\n                method: 'POST',\n                body: {product: payload.id, size: payload.size}\n            }),\n            invalidatesTags: [{type: 'Cart', id: 'LIST'}]\n        }),\n        deleteCartProduct: build.mutation({\n            query: (payload) => ({\n                url: `cart/delete/`,\n                method: 'DELETE',\n                body: {product: payload.id}\n            }),\n            invalidatesTags: [{type: 'Cart', id: 'LIST'}]\n        }),\n        adjustProductCartQuantity: build.mutation({\n            query: (payload) => ({\n                url: `cart/update/`,\n                method: 'PUT',\n                body: {product: payload.product, quantity: payload.cartQuantity}\n            }),\n            invalidatesTags: [{type: 'Cart', id: 'LIST'}]\n        }),\n        //PRODUCTS\n        getProducts: build.query<IProductsResponse, IQueryGetProduct>({\n            query: (queryParams) =>\n                `/products?limit=${queryParams.limit}&page=${queryParams.page}&order=${queryParams.order}&min=${queryParams.filters?.min}&max=${queryParams.filters?.max}&category=${queryParams.filters?.category}`,\n            providesTags: (result) =>\n                result\n                    ? [\n                        ...result.items.map(({_id}) => ({type: 'Products' as const, _id})),\n                        {type: 'Products', id: 'LIST'},\n                    ]\n                    : [{type: 'Products', id: 'LIST'}],\n        }),\n\n        getProduct: build.query<IProduct, string | void>({\n            query: (id) => `/products/${id}`\n        }),\n        addProduct: build.mutation({\n            query: (body) => ({\n                url: 'products/create',\n                method: \"POST\",\n                body\n            }),\n            invalidatesTags: [{type: 'Products', id: 'LIST'}]\n        }),\n        //ORDERS\n        getOrders: build.query<IOrders[], string | null>({\n            query: () => `orders/`,\n            providesTags: (result) =>\n                result\n                    ? [\n                        ...result.map(({_id}) => ({type: 'Orders' as const, _id})),\n                        {type: 'Orders', id: 'LIST'},\n                    ]\n                    : [{type: 'Orders', id: 'LIST'}],\n        }),\n        addOrder: build.mutation({\n            query: (cartId) => ({\n                url: `orders/create/`,\n                method: 'POST',\n                body: {cartId}\n            }),\n            invalidatesTags: [{type: 'Orders', id: 'LIST'}, {type: 'Cart', id: 'LIST'}]\n        })\n    })\n})\n\nexport const {\n    useUserRegisterMutation,\n    useUserLoginMutation,\n    useGetProductsQuery,\n    useGetProductQuery,\n    useGetCartQuery,\n    useAddCartProductMutation,\n    useDeleteCartProductMutation,\n    useGetOrdersQuery,\n    useAddOrderMutation,\n    useAddProductMutation,\n    useAdjustProductCartQuantityMutation,\n} = mainApi","import {createSlice, PayloadAction} from '@reduxjs/toolkit'\nimport {CartState} from '../../types/Cart/cart';\n\nconst initialState: CartState = {\n    products: [],\n    cartId: null,\n}\n\nexport const authSlice = createSlice({\n    name: 'cart',\n    initialState,\n    reducers: {\n        setCart: (state, action: PayloadAction<CartState>) => {\n            state.products = action.payload.products\n            state.cartId = action.payload.cartId\n        }\n    }\n})\n\nexport const {setCart} = authSlice.actions\n\nexport default authSlice.reducer\n","import React from 'react';\nimport {Box, Card, CardContent, Typography} from \"@mui/material\";\nimport {IOrderSummary} from '../../types/Orders/orders';\n\nconst OrdersSummaryCard:React.FC<IOrderSummary> = ({avg, price, quantity}) => {\n    return (\n        <Box mt={2} mb={4} width=\"290px\">\n            <Card variant=\"outlined\">\n                <Box p=\"10px 10px 0 10px\" bgcolor=\"#fafafa\">\n                    <CardContent>\n                        <Typography variant=\"h5\">Orders summary</Typography>\n                        <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\" mt={2}\n                             mb={2}>\n                            <Box width=\"100%\" display=\"flex\" justifyContent=\"space-between\">\n                                <Typography variant=\"body2\">Total orders </Typography>\n                                <Typography variant=\"body1\">{quantity}</Typography>\n                            </Box>\n                            <Box width=\"100%\" display=\"flex\" justifyContent=\"space-between\">\n                                <Typography variant=\"body2\">Total spent </Typography>\n                                <Typography variant=\"body1\">{price.toFixed(2)}$</Typography>\n                            </Box>\n                            <Box width=\"100%\">\n                                <hr/>\n                            </Box>\n                            <Box width=\"100%\" display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n                                <Typography variant=\"body1\">Average spent </Typography>\n                                <Typography variant=\"h5\">{isNaN(avg) ? '0.00' : avg.toFixed(2)}$</Typography>\n                            </Box>\n                        </Box>\n                    </CardContent>\n                </Box>\n            </Card>\n        </Box>\n    );\n};\n\nexport default OrdersSummaryCard;","import React from 'react';\nimport {Box, ListItemIcon, ListItemText} from \"@mui/material\";\nimport {IOrderItem} from \"../../types/Orders/orders\";\nimport { API_URL } from '../../config';\n\n\nconst OrderItem: React.FC<IOrderItem> = ({product, quantity, total}) => {\n    return (\n        <Box width='100%' display=\"flex\" justifyContent=\"space-between\">\n            <Box display=\"flex\" alignItems=\"center\">\n                <ListItemIcon>\n                    <img src={API_URL + product.image} width={50} height={50}\n                         alt={\"product\"}/>\n                </ListItemIcon>\n                <ListItemText primary={product.title}/>\n            </Box>\n            <Box>\n                <ListItemText primary={`${total}$`}/>\n                <ListItemText secondary={`${product.price}$ * ${quantity}x`}/>\n            </Box>\n        </Box>\n    );\n};\nexport default OrderItem;\n","import React, {useState} from 'react';\nimport OrderItem from \"./OrderItem\";\nimport {Box, Collapse, List, ListItem, Typography} from \"@mui/material\";\nimport {IOrders} from \"../../types/Orders/orders\";\nimport {Assignment, ExpandLess, ExpandMore} from \"@mui/icons-material\";\n\nconst Order: React.FC<IOrders> = ({orderTime, products, _id, paymentStatus}) => {\n    const [open, setOpen] = useState(false);\n    const handleClick = () => {\n        setOpen(!open);\n    };\n    const cutStr = (str: string) => {\n        return str.substr(0, 10)\n    }\n\n    return (\n        <List sx={{width: \"100%\", display: \"flex\", flexDirection: \"column\"}}>\n            <ListItem button onClick={handleClick}>\n                <Assignment sx={{mr: 1, display: {xs: \"none\", md: \"block\"}}}/>\n                <Box width=\"100%\" display=\"flex\" justifyContent=\"space-between\">\n                    <Typography sx={{maxWidth: {xs: 100, sm: 150}}}>{`Order #${cutStr(_id)}`}</Typography>\n                    <Box ml={1} display=\"flex\" alignItems=\"center\">\n                        <Typography sx={{pr: 2}}\n                                    variant=\"overline\"\n                                    color={paymentStatus === \"unpaid\" ? \"darkred\" : \"green\"}\n                        >\n                            {paymentStatus}\n                        </Typography>\n                        <Typography sx={{maxWidth: {xs: 50, sm: 100}}} variant=\"button\" >{cutStr(orderTime)}</Typography>\n                        {open ? <ExpandLess/> : <ExpandMore/>}\n                    </Box>\n                </Box>\n            </ListItem>\n            <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                <List component=\"div\" disablePadding>\n                    <ListItem sx={{flexDirection: \"column\"}}  button>\n                        {\n                            products.map(product => <OrderItem key={product.id} {...product}/>)\n                        }\n                    </ListItem>\n                </List>\n            </Collapse>\n        </List>\n    );\n};\n\nexport default Order;","import React from \"react\";\nimport OrdersSummaryCard from \"../Card/OrdersSummaryCard\";\nimport {Box, CircularProgress, Typography} from \"@mui/material\";\nimport Order from \"./Order\";\nimport {useGetOrdersQuery} from \"../../redux/features/api/mainApi\";\nimport {useAppSelector} from \"../../hooks/redux-hooks\";\nimport {getTotalOrders} from \"../../utils/getTotalOrders\";\n\nconst Orders = () => {\n    const userId = useAppSelector((state) => state.auth.id);\n    const {data = [], isLoading} = useGetOrdersQuery(userId);\n    const orders = data.slice().reverse()\n    console.log(orders)\n    const summaryCardData = getTotalOrders(data);\n    if (isLoading) return <CircularProgress color=\"primary\"/>;\n    return (\n        <Box mt={4} display=\"flex\" flexDirection=\"column\" minHeight=\"50vh\">\n            <OrdersSummaryCard {...summaryCardData} />\n            <Typography variant={\"h6\"}>Your orders: </Typography>\n            <Box width=\"100%\" display=\"flex\" flexDirection=\"column\">\n                {data.length === 0 ? (\n                    <Typography sx={{mt: 2}} variant={\"button\"}>\n                        No orders yet\n                    </Typography>\n                ) : (\n                    orders.map((order) => <Order key={order._id} {...order} />)\n                )}\n            </Box>\n        </Box>\n    );\n};\n\nexport default Orders;\n","import { IOrders } from '../types/Orders/orders'\nimport {} from './..'\n\nexport const getTotalOrders = (orders: IOrders[]) => {\n    const totalPrice = orders\n    .map((order) => order.products.map((product) => product.total))\n    .flat()\n    .reduce((prev, cur) => prev + cur, 0);\n    const totalOrdersQuantity = orders.length\n    const avgSpentOnOrder = totalPrice / totalOrdersQuantity\n\n    return {price: totalPrice, quantity: totalOrdersQuantity, avg: avgSpentOnOrder}\n}","import React from 'react';\nimport {Box, Typography} from \"@mui/material\";\nimport Orders from \"../components/Orders/Orders\";\nimport {useAppSelector} from \"../hooks/redux-hooks\";\n\nconst ProfilePage = () => {\n    const userName = useAppSelector(state => state.auth.name)\n    return (\n        <Box mt={4} mb={4}>\n            <Typography sx={{fontSize: {xs: \"1.5rem\", md: \"2rem\"}}} variant={\"h3\"}>Hello, {userName}</Typography>\n            <Orders/>\n        </Box>\n    );\n};\n\nexport default ProfilePage;","import React from 'react';\nimport {Card, CardActionArea, CardContent, CardMedia, Grid, Typography} from \"@mui/material\";\nimport {IProduct} from \"../../types/Products/products\";\nimport {useHistory} from \"react-router-dom\";\nimport { API_URL } from '../../config';\n\nconst ProductItem: React.FC<IProduct> =\n    ({image, price, category, _id, title}) => {\n        const history = useHistory()\n        return (\n            <Grid item xs={12} sm={6} md={4} marginBottom={2}>\n                <Card onClick={() => history.push(`/detailed/${_id}`)}>\n                    <CardActionArea sx={{display: \"block !important\"}}>\n                        <CardMedia\n                            component={\"img\"}\n                            image={API_URL + image}\n                        />\n                        <CardContent>\n                            <Typography variant={\"h5\"}>{title}</Typography>\n                            <Typography color={\"silver\"}>{category}</Typography>\n                            <Typography variant={\"h5\"}>{price}$</Typography>\n                        </CardContent>\n                    </CardActionArea>\n                </Card>\n            </Grid>\n        );\n    };\n\nexport default ProductItem;","import React, {ChangeEvent, Dispatch, SetStateAction} from 'react';\nimport {IconButton, TextField} from \"@mui/material\";\nimport {Close} from \"@mui/icons-material\";\n\ntype SearchPropsType = {\n    value: string,\n    setValue: Dispatch<SetStateAction<string>>\n}\n\nconst Search: React.FC<SearchPropsType> = ({value, setValue}) => {\n\n    return (\n        <TextField\n            variant={\"standard\"}\n            placeholder=\"Search...\"\n            value={value}\n            onChange={(e: ChangeEvent<HTMLInputElement>) => setValue(e.target.value)}\n            InputProps={{\n                endAdornment:\n                    <IconButton onClick={() => setValue('')}>\n                        <Close fontSize={\"small\"}/>\n                    </IconButton>\n            }}\n        >\n        </TextField>\n    );\n};\n\nexport default Search;","import React, {Dispatch, SetStateAction} from 'react';\nimport {Box, FormControl, InputLabel, Select, SelectChangeEvent} from \"@mui/material\";\n\ntype CustomSelectProps = {\n    setValue: Dispatch<SetStateAction<string>>\n    label: string\n}\n\nconst CustomSelect: React.FC<CustomSelectProps> = ({setValue, children, label}) => {\n    return (\n        <Box m={2}>\n            <FormControl fullWidth>\n                <InputLabel id=\"select-id\">{label}</InputLabel>\n                <Select variant=\"standard\"\n                        sx={{width: '110px'}}\n                        label=\"Sort by\" labelId=\"select-id\"\n                        onChange={(e: SelectChangeEvent<SetStateAction<string>>) => setValue(e.target.value)}\n                >\n                    {children}\n                </Select>\n            </FormControl>\n        </Box>\n    );\n};\n\nexport default CustomSelect;","import React, {Dispatch, SetStateAction} from 'react';\nimport {MenuItem} from \"@mui/material\";\nimport CustomSelect from \"./Select\";\n\ntype CustomSelectProps = {\n    setValue: Dispatch<SetStateAction<string>>\n}\n\nconst SortSelect: React.FC<CustomSelectProps> = ({setValue}) => {\n    return (\n        <CustomSelect label=\"Sort by\" setValue={setValue}>\n            <MenuItem sx={{display: 'flex !important'}} value=\"newest\">Newest</MenuItem>\n            <MenuItem sx={{display: 'flex !important'}} value=\"lowest\">Low {'>'} High</MenuItem>\n            <MenuItem sx={{display: 'flex !important'}} value=\"highest\">High {'>'} Low</MenuItem>\n            <MenuItem sx={{display: 'flex !important'}} value=\"category\">Category</MenuItem>\n        </CustomSelect>\n    );\n};\n\nexport default SortSelect;","import React, {Dispatch, SetStateAction} from 'react';\nimport {MenuItem} from \"@mui/material\";\nimport CustomSelect from \"./Select\";\n\ntype CustomSelectProps = {\n    setValue: Dispatch<SetStateAction<string>>\n}\n\nconst SortSelect: React.FC<CustomSelectProps> = ({setValue}) => {\n    return (\n        <CustomSelect label=\"Filter\" setValue={setValue}>\n            <MenuItem sx={{display: 'flex !important'}} value=\"Lifestyle\">Lifestyle</MenuItem>\n            <MenuItem sx={{display: 'flex !important'}} value=\"Running\">Running</MenuItem>\n            <MenuItem sx={{display: 'flex !important'}} value=\"Basketball\">Basketball</MenuItem>\n            <MenuItem sx={{display: 'flex !important'}} value=\"Jordan\">Jordan</MenuItem>\n            <MenuItem sx={{display: 'flex !important'}} value=\"Tennis\">Tennis</MenuItem>\n            <MenuItem sx={{display: 'flex !important'}} value=\"Track\">Track</MenuItem>\n        </CustomSelect>\n    );\n};\n\nexport default SortSelect;","import * as React from 'react';\nimport {Dispatch, SetStateAction, useState} from 'react';\nimport Box from '@mui/material/Box';\nimport Drawer from '@mui/material/Drawer';\nimport {Button, TextField, Typography} from \"@mui/material\";\nimport Divider from \"@mui/material/Divider\";\nimport {FilterAlt} from \"@mui/icons-material\";\nimport {IProductFilters} from \"../../types/Products/products\";\nimport FilterSelect from \"../Select/FilterSelect\";\n\n\ninterface FilterPropsType {\n    setFilters: Dispatch<SetStateAction<IProductFilters>>\n    setPage: Dispatch<SetStateAction<number>>\n}\n\nconst Filter: React.FC<FilterPropsType> = ({setFilters, setPage}) => {\n    const [isOpen, setIsOpen] = useState(false)\n    const [min, setMin] = useState(0)\n    const [max, setMax] = useState(0)\n    const [category, setCategory] = useState('')\n\n    const toggleDrawer = () => () => {\n        setIsOpen(prev => !prev);\n    };\n\n    const handleSubmit = (e: any) => {\n        e.preventDefault()\n        setFilters({min, max, category})\n        setPage(1)\n    }\n\n    const handleClearFilter = () => {\n        setMin(0)\n        setMax(0)\n        setFilters({})\n    }\n\n    return (\n        <Box>\n            <Button style={{padding: 12, marginLeft: 8}} size=\"large\" onClick={toggleDrawer()}>\n                Filter\n                <FilterAlt/>\n            </Button>\n            <Drawer\n                anchor={\"right\"}\n                open={isOpen}\n                onClose={toggleDrawer()}\n            >\n                <Box component=\"form\" width=\"320px\" onSubmit={handleSubmit}>\n                    <Typography\n                        align={\"center\"}\n                        onClick={toggleDrawer()}\n                        color=\"inherit\"\n                        p={2}\n                        sx={{cursor: 'pointer'}}\n                    >\n                        Back\n                    </Typography>\n                    <Divider/>\n\n                    <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"center\" alignItems=\"center\">\n                        <Typography sx={{mt: 2}} align=\"center\" variant=\"h5\">Categories</Typography>\n                        <FilterSelect setValue={setCategory}/>\n                    </Box>\n\n                    <Divider/>\n                    <Typography sx={{mt: 2}} align=\"center\" variant=\"h5\">Price</Typography>\n                    <Box display=\"flex\" justifyContent=\"center\" mt={1} sx={{\"& > *\": {width: 100, m: 2}}}>\n                        <TextField\n                            onChange={(e) => setMin(+e.target.value)}\n                            type=\"number\"\n                            label=\"min\"\n                        />\n                        <TextField\n                            onChange={(e) => setMax(+e.target.value)}\n                            type=\"number\"\n                            label=\"max\"\n                        />\n                    </Box>\n                    <Divider/>\n                    <Button name=\"clear\" onClick={() => handleClearFilter()}\n                            style={{padding: 4, marginTop: 12, width: '100%'}}\n                            size=\"large\">Clear filter</Button>\n                    <Button name=\"search\" onClick={() => setIsOpen(false)} type=\"submit\"\n                            style={{padding: 4, marginTop: 12, width: '100%'}}\n                            size=\"large\">SEARCH</Button>\n                </Box>\n            </Drawer>\n        </Box>\n    );\n}\n\nexport default Filter\n\n","import React, {useState} from \"react\";\nimport ProductItem from \"./ProductItem\";\nimport {Box, CircularProgress, Grid, Pagination, Typography} from \"@mui/material\";\nimport {useGetProductsQuery} from \"../../redux/features/api/mainApi\";\nimport {IProductFilters, IProductsResponse} from \"../../types/Products/products\";\nimport Search from \"../Search/Search\";\nimport SortSelect from \"../Select/SortSelect\";\nimport Filter from \"../Drawer/Filter\";\n\nconst Products = () => {\n    const [page, setPage] = useState(1)\n    const [searchValue, setSearchValue] = useState('')\n    const [sortValue, setSortValue] = useState('Newest')\n    const [filters, setFilters] = useState({} as IProductFilters)\n    const portionSize = 9\n\n    const handlePageChange = (event: React.ChangeEvent<unknown>, value: number) => {\n        setPage(value);\n    };\n\n    const {data = {} as IProductsResponse, isLoading} = useGetProductsQuery(\n        {limit: portionSize, page: page, order: sortValue, filters});\n\n    if (isLoading) return <CircularProgress color=\"primary\"/>;\n    return (\n        <Box width=\"100%\" display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\n            <Box mb={4} width=\"100%\" flexDirection={{xs: \"column\", md: \"row\"}}\n                 display=\"flex\" justifyContent=\"space-between\">\n                <Search value={searchValue} setValue={setSearchValue}/>\n                <Box mt={2} display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\n                    <SortSelect setValue={setSortValue}/>\n                    <Filter setPage={setPage} setFilters={setFilters}/>\n                </Box>\n            </Box>\n\n            <Grid container spacing={4}>\n                {\n                    data.items.length > 0 ?\n                        data.items.filter(product => product.title.toLowerCase().includes(searchValue.toLowerCase()))\n                            .map((product) => (\n                                <ProductItem key={product._id} {...product} />\n                            ))\n                        :\n                        <Typography sx={{pl: '1.5rem'}} gutterBottom variant=\"h5\">No products</Typography>\n                }\n            </Grid>\n\n            <Pagination sx={{mb: 4, mt: 4}} page={page} onChange={handlePageChange} size={\"large\"}\n                        count={Math.ceil(data.totalItems / portionSize)}\n                        showFirstButton\n                        showLastButton/>\n\n        </Box>\n    );\n};\n\nexport default Products;\n","import React from 'react';\nimport Carousel from \"react-material-ui-carousel\";\nimport {Box} from \"@mui/material\";\n\nconst PromotionSlider = () => {\n    let items = [\n        {\n            title: \"Nike promo\",\n            image: \"https://hips.hearstapps.com/hmg-prod.s3.amazonaws.com/images/new-shoe-releases-06032020-1593546250.jpg\"\n        },\n        {\n            title: \"Nike promo\",\n            image: \"https://img-cdn.tnwcdn.com/image?fit=1280%2C720&url=https%3A%2F%2Fcdn0.tnwcdn.com%2Fwp-content%2Fblogs.dir%2F1%2Ffiles%2F2019%2F11%2Fnike.jpg&signature=5709e93e20918cda02ef67130225d2e6\"\n        },\n        {\n            title: \"Nike promo\",\n            image: \"https://i2.wp.com/rematch.net/wp-content/uploads/2019/06/Nike-Sale-Up-to-50-off-2019.png\"\n        },\n    ]\n    return (\n        <Carousel>\n            {items.map(item => (\n                <Box key={item.image}\n                     sx={{\n                         height: {xs: \"35vh\", sm: \"70vh\", md: \"85vh\"},\n                         backgroundImage: `url(${item.image})`,\n                         backgroundSize: \"cover\",\n                         backgroundPosition: \"center\",\n                     }}\n                />\n            ))}\n        </Carousel>\n    );\n};\n\nexport default PromotionSlider;","import React from 'react';\nimport Products from \"../components/Products/Products\";\nimport {Box, Typography} from \"@mui/material\";\nimport PromotionSlider from \"../components/PromotionSlider\";\n\nconst ProductsPage = () => {\n    return (\n        <Box>\n            <PromotionSlider/>\n            <Typography sx={{mb: 4, mt: 4}} variant={\"h4\"}>All products</Typography>\n            <Box display={\"flex\"} flexDirection={\"column\"} alignItems={\"center\"}>\n                <Products/>\n            </Box>\n        </Box>\n    );\n};\n\nexport default ProductsPage;","import React, {useState} from \"react\";\nimport {IDetailedProduct, IProduct} from \"../../types/Products/products\";\nimport {Box, Button, CircularProgress, MenuItem, TextField, Typography} from \"@mui/material\";\nimport {useAddCartProductMutation, useGetProductQuery,} from \"../../redux/features/api/mainApi\";\nimport {useAppDispatch, useAppSelector} from \"../../hooks/redux-hooks\";\nimport {setErrorSnackbar, setInfoSnackbar, setSuccessSnackbar} from \"../../redux/features/snackbarSlice\";\nimport {NavLink} from \"react-router-dom\";\nimport { API_URL } from \"../../config\";\n\nconst DetailedProduct: React.FC<IDetailedProduct> = ({id}) => {\n    const dispatch = useAppDispatch();\n    const cartProducts = useAppSelector(state => state.cart.products)\n    const {data: product = {} as IProduct, isLoading} = useGetProductQuery(id);\n    const [size, setSize] = useState('')\n    const disableButtonCondition = cartProducts.findIndex(p => p.product._id === id && size === p.size) === -1 ? false : true\n    const isAuth = !!useAppSelector((state) => state.auth.token)\n    const userId = useAppSelector((state) => state.auth.id);\n    const [addProduct] = useAddCartProductMutation();\n\n    const handleAddingProduct = () => {\n        if (size !== '') {\n            addProduct({\n                id,\n                userId,\n                size\n            }).unwrap().then(() => dispatch(setSuccessSnackbar(\"Products was successfully added to cart\")))\n                .catch(e => dispatch(setErrorSnackbar(e.data.message))\n                )\n        } else dispatch(setInfoSnackbar('Please, choose one of the sizes'));\n    };\n\n    if (isLoading) return <CircularProgress color=\"primary\"/>;\n    return (\n        <Box\n            display={\"flex\"}\n            sx={{mb: 2, flexDirection: {xs: \"column\", md: \"row\"}}}\n        >\n            <Box>\n                <Box\n                    component={\"img\"}\n                    sx={{height: {xs: \"360px\", md: \"500px\"}, mr: 2}}\n                    src={\n                        product.image ? API_URL + product.image : \"\"\n                    }\n                />\n            </Box>\n            <Box\n                flex={1}\n                display={\"flex\"}\n                flexDirection={\"column\"}\n                justifyContent={\"space-between\"}\n            >\n                <Box>\n                    <Typography variant={\"overline\"} color={\"primary.light\"}>\n                        {product.sex}\n                    </Typography>\n                    <Typography variant={\"h4\"}> {product.title}</Typography>\n                    <Typography sx={{mb: 2}} variant={\"h6\"} color={\"primary.light\"}>\n                        {product.category}\n                    </Typography>\n                    <Typography>{product.description}</Typography>\n                    <TextField\n                        sx={{width: 100, mt: 2, alignSelf: \"flex-end\"}}\n                        label=\"Size\"\n                        onChange={(e) => setSize(e.target.value)}\n                        select>\n                        {product.sizes.split(', ').map((size: string) => <MenuItem value={size}>{size}</MenuItem>)}\n                    </TextField>\n                </Box>\n                <Box sx={{mt: 4}} display={\"flex\"} justifyContent={\"space-between\"}>\n                    <Typography variant={\"h4\"}>{product.price}$</Typography>\n                    {\n                        isAuth ?\n                            <Button onClick={handleAddingProduct} disabled={disableButtonCondition}\n                                    variant={\"contained\"}>\n                                Add to cart\n                            </Button> :\n                            <NavLink to=\"/auth\">\n                                <Button onClick={() => dispatch(setInfoSnackbar(\"Please, login to purchase product\"))}\n                                        variant={\"contained\"}>\n                                    Add to cart\n                                </Button>\n                            </NavLink>\n                    }\n                </Box>\n            </Box>\n        </Box>\n    );\n};\n\nexport default DetailedProduct;\n","import React from 'react';\nimport DetailedProduct from \"../components/Products/DetailedProduct\";\nimport {useParams} from \"react-router-dom\";\nimport {Box} from \"@mui/material\";\n\nconst DetailedProductPage = () => {\n    const {id} = useParams<{id: string}>()\n    return (\n        <Box mb={4}>\n            <DetailedProduct id={id} />\n        </Box>\n    );\n};\n\nexport default DetailedProductPage;","import React, {useState} from \"react\";\nimport {Box, Button, Typography} from \"@mui/material\";\nimport {Add, Delete, Remove} from \"@mui/icons-material\";\nimport {ICartProduct} from \"../../types/Cart/cart\";\nimport {useAdjustProductCartQuantityMutation, useDeleteCartProductMutation,} from \"../../redux/features/api/mainApi\";\nimport {useAppDispatch, useAppSelector} from \"../../hooks/redux-hooks\";\nimport {setSuccessSnackbar} from \"../../redux/features/snackbarSlice\";\nimport { API_URL } from \"../../config\";\n\nconst CartItem: React.FC<ICartProduct> = ({product, quantity, total, size, _id}) => {\n  const [cartQuantity, setCartQuantity] = useState(quantity);\n  const dispatch = useAppDispatch()\n  const userId = useAppSelector((state) => state.auth.id);\n  const [adjustProductCart] = useAdjustProductCartQuantityMutation();\n  const [deleteCartProduct] = useDeleteCartProductMutation();\n  const plus = () => {\n    if (cartQuantity < 10) {\n      setCartQuantity(cartQuantity + 1);\n      adjustProductCart({\n        userId,\n        product: product._id,\n        cartQuantity: cartQuantity + 1,\n      });\n    }\n  };\n\n  const minus = () => {\n    if (cartQuantity > 1) {\n      setCartQuantity(cartQuantity - 1);\n      adjustProductCart({\n        userId,\n        product: product._id,\n        cartQuantity: cartQuantity - 1,\n      });\n    }\n  };\n\n  const handleDeleteProduct = () => {\n    deleteCartProduct({id: _id, userId});\n    dispatch(setSuccessSnackbar('The product was successfully deleted'))\n  };\n  return (\n    <Box\n      mb={2}\n      mt={2}\n      display={\"flex\"}\n      justifyContent={\"space-between\"}\n      width={\"100%\"}\n    >\n      <Box display={\"flex\"}>\n        <img\n          width={100}\n          height={100}\n          src={API_URL + product.image}\n          alt=\"product\"\n        />\n        <Box ml={1}>\n          <Typography\n              variant=\"h5\"\n              sx={{fontSize: {xs: \"0.9rem\", md: \"1rem\"}}}\n          >\n            {product.title}\n          </Typography>\n          <Typography variant=\"body1\">\n            {product.price}$ x {cartQuantity}\n          </Typography>\n          <Typography color={\"primary.light\"} variant=\"body2\">\n            Size: {size}\n          </Typography>\n          <Box display={\"flex\"} flexWrap={\"nowrap\"} pt={2}>\n            <Button onClick={plus}>\n              <Add fontSize={\"small\"}/>\n            </Button>\n            <Button onClick={minus}>\n              <Remove/>\n            </Button>\n          </Box>\n        </Box>\n      </Box>\n      <Box\n        display={\"flex\"}\n        justifyContent={\"space-between\"}\n        flexDirection={\"column\"}\n      >\n        <Button onClick={handleDeleteProduct}>\n          <Delete />\n        </Button>\n        <Typography variant={\"h5\"}>{product.price * cartQuantity}$</Typography>\n      </Box>\n    </Box>\n  );\n};\n\nexport default CartItem;\n","export const getTotal = <T, K extends keyof T>(array: T[], property: K): number => {\n    return array.map(item => item[property]).reduce((prev, cur: any) => prev + cur, 0)\n}","import React from 'react';\nimport {Box, Button, Card, CardContent, Typography} from \"@mui/material\";\nimport {ICartSummary} from \"../../types/Cart/cart\";\n\nconst CartSummaryCard: React.FC<ICartSummary> = ({totalPrice, totalQuantity, handleAddProduct}) => {\n    return (\n        <Box mb={4}>\n            <Card variant=\"outlined\">\n                <Box p=\"10px 10px 0 10px\" bgcolor=\"#fafafa\">\n                    <CardContent>\n                        <Typography variant=\"h5\">Total amount</Typography>\n                        <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\" mt={2}\n                             mb={2}>\n                            <Box width=\"100%\" display=\"flex\" justifyContent=\"space-between\">\n                                <Typography variant=\"body2\">Initial amount </Typography>\n                                <Typography variant=\"body1\">{totalPrice}$</Typography>\n                            </Box>\n                            <Box width=\"100%\" display=\"flex\" justifyContent=\"space-between\">\n                                <Typography variant=\"body2\">Products amount </Typography>\n                                <Typography variant=\"body1\">{totalQuantity}</Typography>\n                            </Box>\n                            <Box width=\"100%\" display=\"flex\" justifyContent=\"space-between\">\n                                <Typography variant=\"body2\">Delivery price </Typography>\n                                <Typography variant=\"body1\">{totalPrice > 150 ? '0$' : '15$'}</Typography>\n                            </Box>\n                            <Box width=\"100%\">\n                                <hr/>\n                            </Box>\n                            <Box width=\"100%\" display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n                                <Typography variant=\"body1\">Grand total </Typography>\n                                <Typography variant=\"h5\">{totalPrice > 150 ? totalPrice : totalPrice + 15}$</Typography>\n                            </Box>\n                        </Box>\n                        <Button onClick={handleAddProduct} size=\"small\" variant=\"contained\" color=\"primary\">\n                            Proceed to checkout</Button>\n                    </CardContent>\n                </Box>\n            </Card>\n        </Box>\n    );\n};\n\nexport default CartSummaryCard","import React from \"react\";\nimport CartItem from \"./CartItem\";\nimport {Box} from \"@mui/material\";\nimport {ICartProduct} from \"../../types/Cart/cart\";\nimport {useAppDispatch} from \"../../hooks/redux-hooks\";\nimport {useAddOrderMutation} from \"../../redux/features/api/mainApi\";\nimport {setErrorSnackbar, setInfoSnackbar} from \"../../redux/features/snackbarSlice\";\nimport {getTotal} from \"../../utils/getTotal\";\nimport CartSummaryCard from \"../Card/CartSummaryCard\";\nimport {setCart} from \"../../redux/features/cartSlice\";\n\nconst Cart: React.FC<{ products: ICartProduct[]; cartId: string | null }> = ({\n                                                                                 products,\n                                                                                 cartId,\n                                                                             }) => {\n    const dispatch = useAppDispatch();\n    const summaryPrice = getTotal(products, 'total')\n    const summaryQuantity = getTotal(products, 'quantity')\n    const [addOrder] = useAddOrderMutation();\n    const handleAddingOrder = async () => {\n        addOrder(cartId).unwrap()\n            .then(payload => {\n                window.location = payload\n                dispatch(setInfoSnackbar(\"Payment is processing\"))\n                dispatch(setCart({products: [], cartId: null}))\n            })\n            .catch(e => dispatch(setErrorSnackbar(e.data.message)))\n    };\n\n    return (\n        <Box\n            height=\"100%\"\n            display=\"flex\"\n            justifyContent=\"space-between\"\n            flexDirection={{xs: \"column\", md: \"row\"}}\n        >\n            <Box display=\"flex\" flexDirection=\"column\" width={\"100%\"} mr={1}>\n                {products.map((product) => (\n                    <CartItem key={product._id} {...product} />\n                ))}\n            </Box>\n\n            <CartSummaryCard handleAddProduct={handleAddingOrder} totalPrice={summaryPrice}\n                             totalQuantity={summaryQuantity}/>\n\n        </Box>\n    );\n};\nexport default Cart;\n","export default __webpack_public_path__ + \"static/media/emptyCart.968ec22f.png\";","import React from 'react';\nimport cartImg from '../../assets/img/cart/emptyCart.png'\nimport {useHistory} from \"react-router-dom\";\nimport {Box, Button, Typography} from \"@mui/material\";\nimport {ArrowBackIos} from \"@mui/icons-material\";\n\nconst EmptyCart = () => {\n    const history = useHistory()\n    return (\n        <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\" height=\"50vh\" justifyContent=\"center\" m={4}>\n            <img height={180} width={200} src={cartImg} alt=\"emptyCartImage\"/>\n            <Box margin={2} textAlign=\"center\">\n                <Typography variant=\"h4\">Empty cart</Typography>\n                <Typography variant=\"caption\">Add at least one product to order it!</Typography>\n            </Box>\n            <Button\n                variant=\"contained\"\n                sx={{backgroundColor: '#a4a4a4', mb: 4}}\n                onClick={() => history.push(\"/\")}\n            >\n                <ArrowBackIos/>\n                <Typography>Back to products</Typography>\n            </Button>\n        </Box>\n    );\n};\n\nexport default EmptyCart;","import React from \"react\";\nimport Cart from \"../components/Cart/Cart\";\nimport EmptyCart from \"../components/Cart/EmptyCart\";\nimport {Typography} from \"@mui/material\";\nimport {useAppSelector} from \"../hooks/redux-hooks\";\n\nconst CartPage = () => {\n    const products = useAppSelector((state) => state.cart.products)\n    const cartId = useAppSelector((state) => state.cart.cartId)\n\n    return (\n        <>\n            <Typography sx={{display: {xs: \"none\", md: \"block\"}}} variant=\"h4\">\n                Cart\n            </Typography>\n            {products && products.length !== 0 ? (\n                <Cart products={products} cartId={cartId}/>\n            ) : (\n                <EmptyCart/>\n            )}\n        </>\n    );\n};\n\nexport default CartPage;\n","import * as React from \"react\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport Link from \"@mui/material/Link\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport {IToggleAuth, RegisterData} from \"../../types/Auth/auth\";\nimport {useUserRegisterMutation} from \"../../redux/features/api/mainApi\";\nimport {useDispatch} from \"react-redux\";\nimport {setErrorSnackbar, setSuccessSnackbar} from \"../../redux/features/snackbarSlice\";\nimport {CircularProgress} from \"@mui/material\";\nimport {useForm} from \"react-hook-form\";\n\nconst SignUp: React.FC<IToggleAuth> = ({toggle}) => {\n    const dispatch = useDispatch();\n\n    const {register, handleSubmit, formState: {errors}} = useForm<RegisterData>()\n    const [registerUser, {isLoading}] = useUserRegisterMutation();\n\n    const handleRegister = (data: RegisterData) => {\n        registerUser({\n            ...data, role: \"USER\"\n        }).unwrap().then(() => {\n            toggle()\n            dispatch(setSuccessSnackbar('User has been successfully created'))\n        }).catch(e => dispatch(setErrorSnackbar(e.data.message)))\n    };\n    if (isLoading) return <CircularProgress color=\"primary\"/>;\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline/>\n            <Box\n                sx={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    alignItems: \"center\",\n                }}\n            >\n                <Avatar sx={{m: 1, bgcolor: \"gray\"}}>\n                    <LockOutlinedIcon/>\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Sign up\n                </Typography>\n                <Box component=\"form\" onSubmit={handleSubmit((data) => handleRegister(data))} sx={{mt: 3}}>\n                    <Grid container spacing={2}>\n                        <Grid item xs={12}>\n                            <TextField\n                                {...register('name',\n                                    {\n                                        required: \"Fill this input, please\",\n                                        maxLength: {value: 36, message: \"Max name length is 36\"}\n                                    })}\n                                fullWidth\n                                id=\"name\"\n                                label=\"Name\"\n                                autoFocus\n                            />\n                            {errors.name &&\n                            <Typography variant=\"caption\" color=\"salmon\">{errors.name.message}</Typography>}\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                {...register('email', {\n                                    required: \"Fill this input, please\",\n                                    pattern: {\n                                        value: /\\S+@\\S+\\.\\S+/,\n                                        message: \"Email should have this format: example@mail.com\"\n                                    }\n                                })}\n                                fullWidth\n                                id=\"email\"\n                                label=\"Email Address\"\n                            />\n                            {errors.email &&\n                            <Typography variant=\"caption\" color=\"salmon\">{errors.email.message}</Typography>}\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                {...register('password', {\n                                    required: \"Fill this input, please\",\n                                    minLength: {value: 6, message: \"Password min length should be 6 \"}\n                                })}\n                                fullWidth\n                                type=\"password\"\n                                label=\"Password\"\n                                id=\"password\"\n                            />\n                            {errors.password &&\n                            <Typography variant=\"caption\" color=\"salmon\">{errors.password.message}</Typography>}\n                        </Grid>\n                    </Grid>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        sx={{mt: 3, mb: 2}}\n                    >\n                        Sign Up\n                    </Button>\n                    <Grid container justifyContent=\"flex-end\">\n                        <Grid item>\n                            <Link sx={{cursor: \"pointer\"}} onClick={toggle} variant=\"body2\">\n                                Already have an account? Sign in\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </Box>\n            </Box>\n        </Container>\n    );\n};\n\nexport default SignUp;\n","import * as React from \"react\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport Link from \"@mui/material/Link\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport {IToggleAuth, LoginData} from \"../../types/Auth/auth\";\nimport {useUserLoginMutation} from \"../../redux/features/api/mainApi\";\nimport {setCredentials} from \"../../redux/features/authSlice\";\nimport {useAppDispatch} from \"../../hooks/redux-hooks\";\nimport {setErrorSnackbar, setSuccessSnackbar} from \"../../redux/features/snackbarSlice\";\nimport {CircularProgress} from \"@mui/material\";\nimport {useForm} from 'react-hook-form'\n\nconst SignIn: React.FC<IToggleAuth> = ({toggle}) => {\n    const [loginUser, {isLoading}] = useUserLoginMutation();\n    const dispatch = useAppDispatch();\n\n    const {register, handleSubmit, formState: {errors}} = useForm<LoginData>()\n\n    const handleLogin = async (data: LoginData) => {\n        await loginUser({...data}).unwrap().then((payload) => {\n            console.log(payload)\n            dispatch(setCredentials(payload));\n            localStorage.setItem(\"authData\", JSON.stringify(payload));\n            dispatch(setSuccessSnackbar('Welcome back!'));\n        }).catch(e => {\n            dispatch(setErrorSnackbar('Check your credentials and try again'))\n        })\n\n    };\n    if (isLoading) return <CircularProgress color=\"primary\"/>;\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline/>\n            <Box\n                sx={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    alignItems: \"center\",\n                }}\n            >\n                <Avatar sx={{m: 1, bgcolor: \"gray\"}}>\n                    <LockOutlinedIcon/>\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Sign in\n                </Typography>\n                <Box\n                    component=\"form\"\n                    onSubmit={handleSubmit((data) => handleLogin(data))}\n                    sx={{mt: 1}}>\n                    <TextField\n                        {...register(\"email\", {required: \"Fill this input, please\"})}\n                        margin=\"normal\"\n                        fullWidth\n                        id=\"email\"\n                        label=\"Email Address\"\n                        autoFocus\n                    />\n                    {errors.email && <Typography variant=\"caption\" color=\"salmon\">{errors.email.message}</Typography>}\n                    <TextField\n                        {...register(\"password\",\n                            {\n                                required: \"Fill this input, please\",\n                                minLength: {value: 6, message: \"Password length is too short\"}\n                            })}\n                        margin=\"normal\"\n                        fullWidth\n                        label=\"Password\"\n                        type=\"password\"\n                        id=\"password\"\n                    />\n                    {errors.password &&\n                    <Typography variant=\"caption\" color=\"salmon\">{errors.password?.message}</Typography>}\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        sx={{mt: 3, mb: 2}}\n                    >\n                        Sign In\n                    </Button>\n                    <Grid container>\n                        <Grid item>\n                            <Link sx={{cursor: \"pointer\"}} onClick={toggle} variant=\"body2\">\n                                {\"Don't have an account? Sign Up\"}\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </Box>\n            </Box>\n        </Container>\n    );\n};\n\nexport default SignIn;\n","import React, {useState} from 'react';\nimport {Box}  from \"@mui/material\";\nimport SignUp from \"../components/Auth/SignUp\";\nimport SignIn from \"../components/Auth/SignIn\";\n\nconst AuthPage = () => {\n    const [isRegistered, setIsRegistered] = useState(false)\n    const toggleRegistered = () => {\n        setIsRegistered(prev => !prev)\n    }\n    return (\n        <Box sx={{height: {xs: \"100vh\", md: \"100%\"}}} display={\"flex\"} justifyContent={\"center\"} alignItems={\"center\"} width={\"100%\"} mb={2}>\n            {isRegistered ?\n                <SignIn toggle={toggleRegistered}/>\n                :\n                <SignUp toggle={toggleRegistered}/>\n            }\n        </Box>\n    );\n};\n\nexport default AuthPage;","import React, {useState} from 'react';\nimport {Box, Button, CircularProgress, MenuItem, TextField, Typography} from \"@mui/material\";\nimport {IAdminAddProduct} from \"../../types/Admin/admin\";\nimport {useAddProductMutation} from \"../../redux/features/api/mainApi\";\nimport {useAppDispatch} from \"../../hooks/redux-hooks\";\nimport {setErrorSnackbar, setSuccessSnackbar} from \"../../redux/features/snackbarSlice\";\n\nconst AddProductForm = () => {\n    const [product, setProduct] = useState<IAdminAddProduct>({\n        title: '',\n        description: '',\n        category: '',\n        price: '',\n        image: '',\n        sex: '',\n        sizes: '37, 38, 39, 40, 41, 42, 43, 44',\n    })\n\n    const dispatch = useAppDispatch()\n\n    const [addProduct, {isLoading}] = useAddProductMutation()\n\n    const handleChange = (e: any) => {\n        if (e.target.name === 'image') {\n            setProduct({...product, [e.target.name]: e.target.files[0]})\n        } else setProduct({...product, [e.target.name]: e.target.value})\n\n    }\n\n    const handleSubmit = (e: any) => {\n        e.preventDefault()\n        const formData = createFormData()\n        addProduct(formData).unwrap()\n            .then(() => {\n                dispatch(setSuccessSnackbar(\"Products was successfully created\"))\n                setProduct({\n                    title: '',\n                    description: '',\n                    category: '',\n                    price: '',\n                    image: '',\n                    sex: '',\n                    sizes: '',\n                })\n            })\n            .catch(e => dispatch(setErrorSnackbar(e.data.message)))\n    }\n\n    const createFormData = () => {\n        const formData = new FormData()\n        formData.append(\"title\", product.title)\n        formData.append(\"description\", product.description)\n        formData.append(\"category\", product.category)\n        formData.append(\"price\", product.price)\n        formData.append(\"sex\", product.sex)\n        formData.append(\"sizes\", product.sizes)\n        formData.append(\"image\", product.image)\n        return formData\n    }\n\n    if (isLoading) return <CircularProgress color={\"primary\"}/>\n    return (\n        <Box width={\"300px\"}>\n            <Typography gutterBottom variant=\"h4\">Create product: </Typography>\n            <Box\n                onSubmit={handleSubmit}\n                display={\"flex\"}\n                flexDirection={\"column\"}\n                component={\"form\"}\n                autoComplete=\"off\"\n                sx={{\n                    '& > :not(style)': {m: 1, width: '25ch'},\n                }}\n            >\n                <TextField\n                    required\n                    onChange={handleChange}\n                    variant={\"standard\"}\n                    label=\"Title\"\n                    id=\"title\"\n                    name=\"title\"\n                    value={product.title}\n                />\n                <TextField required onChange={handleChange} variant={\"standard\"} label=\"Description\"\n                           multiline={true} rows={3}\n                           id=\"description\"\n                           name=\"description\"\n                           value={product.description}\n                />\n                <TextField required onChange={handleChange} variant={\"standard\"} label=\"Category\" id=\"category\"\n                           name=\"category\"\n                           select\n                           value={product.category}\n                >\n                    <MenuItem value=\"Lifestyle\">Lifestyle</MenuItem>\n                    <MenuItem value=\"Running\">Running</MenuItem>\n                    <MenuItem value=\"Basketball\">Basketball</MenuItem>\n                    <MenuItem value=\"Jordan\">Jordan</MenuItem>\n                    <MenuItem value=\"Tennis\">Tennis</MenuItem>\n                    <MenuItem value=\"Track\">Track</MenuItem>\n                </TextField>\n                <TextField required onChange={handleChange} variant={\"standard\"} label=\"Price\"\n                           id=\"price\"\n                           name=\"price\"\n                           type=\"number\"\n                           value={product.price}\n                />\n                <TextField required onChange={handleChange} variant={\"standard\"} label=\"Sex\"\n                           id=\"sex\"\n                           name=\"sex\"\n                           select\n                           value={product.sex}\n                >\n                    <MenuItem value={\"male\"}>Male</MenuItem>\n                    <MenuItem value={\"female\"}>Female</MenuItem>\n                </TextField>\n                <TextField required onChange={handleChange} variant={\"standard\"} label=\"Sizes\"\n                           id=\"sizes\"\n                           name=\"sizes\"\n                           placeholder={\"Format: '37, 38, 39...' \"}\n                           value={product.sizes}\n                />\n                <input\n                    required\n                    onChange={handleChange}\n                    type=\"file\"\n                    accept={'image/*'}\n                    name=\"image\"\n                    id=\"image\"\n                />\n                <Button type={\"submit\"} variant={\"contained\"}>Submit product</Button>\n            </Box>\n        </Box>\n    );\n};\n\nexport default AddProductForm;","import React from 'react';\nimport {Box} from \"@mui/material\";\nimport AddProductForm from \"../components/Admin/AddProductForm\";\n\nconst AdminPage = () => {\n    return (\n        <Box>\n            <AddProductForm/>\n        </Box>\n    );\n};\n\nexport default AdminPage;","import React, {useEffect, useState} from 'react';\nimport {useAppDispatch, useAppSelector} from \"../hooks/redux-hooks\";\nimport {setCredentials} from \"../redux/features/authSlice\";\nimport {useGetCartQuery} from \"../redux/features/api/mainApi\";\nimport {setCart} from \"../redux/features/cartSlice\";\nimport {useRoutes} from \"../routes/routes\";\nimport {Box, CircularProgress} from \"@mui/material\";\n\nconst InitializeApp = () => {\n    const [lsValue, setLSValue] = useState<string | null>()\n    const dispatch = useAppDispatch();\n    window.addEventListener('storage', () => setLSValue(localStorage.getItem('authData')));\n    useEffect(() => {\n        const data = localStorage.getItem(\"authData\");\n        if (data) {\n            const authData = JSON.parse(data);\n            if (authData.token) {\n                dispatch(setCredentials(authData));\n            }\n        }\n    }, [dispatch, lsValue]);\n    const isAuth = useAppSelector((state) => state.auth.token);\n    const userId = useAppSelector((state) => state.auth.id);\n\n    const {data, isLoading} = useGetCartQuery(userId);\n\n    useEffect(() => {\n        if (isAuth && data) {\n            dispatch(setCart({products: data.products, cartId: data.id}))\n        }\n    }, [data, dispatch, isAuth, lsValue])\n\n    const routes = useRoutes(!!isAuth);\n\n    if (isLoading) return <CircularProgress color=\"primary\"/>\n    return (\n        <Box width=\"100%\">\n            {routes}\n        </Box>\n    );\n};\n\nexport default InitializeApp;","import {Redirect, Route, Switch} from \"react-router-dom\"\nimport ProfilePage from \"../pages/ProfilePage\";\nimport ProductsPage from \"../pages/ProductsPage\";\nimport DetailedProductPage from \"../pages/DetailedProductPage\";\nimport CartPage from \"../pages/CartPage\";\nimport AuthPage from \"../pages/AuthPage\";\nimport AdminPage from \"../pages/AdminPage\";\nimport {useAppSelector} from \"../hooks/redux-hooks\";\n\n\nexport const useRoutes = (isAuthenticated: boolean) => {\n    const isAdmin = useAppSelector(state => state.auth.role)\n    if (isAuthenticated) {\n        return (\n            <Switch>\n                <Route path='/products' exact>\n                    <ProductsPage/>\n                </Route>\n                <Route path='/profile' exact>\n                    <ProfilePage/>\n                </Route>\n                <Route path='/detailed/:id'>\n                    <DetailedProductPage/>\n                </Route>\n                <Route path='/cart' exact>\n                    <CartPage/>\n                </Route>\n                {isAdmin === 'ADMIN' ?\n                    <Route path='/admin' exact>\n                        <AdminPage/>\n                    </Route>\n                    :\n                    null\n                }\n                <Redirect to='/products'/>\n            </Switch>\n        )\n    }\n    return (\n        <Switch>\n            <Route path='/' exact>\n                <ProductsPage/>\n            </Route>\n            <Route path='/auth'>\n                <AuthPage/>\n            </Route>\n            <Route path='/detailed/:id'>\n                <DetailedProductPage/>\n            </Route>\n            <Redirect to='/'/>\n        </Switch>\n    )\n}","import React from \"react\";\nimport MainLayout from \"./layouts/MainLayout\";\nimport CustomizedSnackbar from \"./components/Snackbar\";\nimport InitializeApp from \"./utils/InitializeApp\";\n\nconst App = () => {\n    return (\n        <MainLayout>\n            <CustomizedSnackbar/>\n            <InitializeApp/>\n        </MainLayout>\n    );\n};\n\nexport default App;\n","import {createTheme} from \"@mui/material\";\n\nexport const theme = createTheme({\n    palette: {\n        primary: {\n            main: \"#000\",\n            light: \"#b4b4b4\",\n        },\n    },\n    shape: {\n        borderRadius: 25\n    }\n})","import {configureStore} from '@reduxjs/toolkit'\nimport authReducer from './features/authSlice'\nimport cartReducer from './features/cartSlice'\nimport snackbarReducer from './features/snackbarSlice'\nimport {mainApi} from \"./features/api/mainApi\";\n\nexport const store = configureStore({\n    reducer: {\n        auth: authReducer,\n        cart: cartReducer,\n        snackbar: snackbarReducer,\n        [mainApi.reducerPath]: mainApi.reducer\n    },\n    middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(mainApi.middleware)\n})\n\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppDispatch = typeof store.dispatch","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {ThemeProvider} from \"@mui/material\";\nimport {theme} from \"./theme/theme\";\nimport {HashRouter as Router} from \"react-router-dom\";\nimport {Provider} from 'react-redux'\nimport {store} from \"./redux/store\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router>\n            <ThemeProvider theme={theme}>\n                <App/>\n            </ThemeProvider>\n        </Router>\n    </Provider>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}